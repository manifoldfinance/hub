<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Manifold Finance Hub</title><link>http://manifold.finance/hub/</link><description>Recent content in Introduction on Manifold Finance Hub</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://manifold.finance/hub/index.xml" rel="self" type="application/rss+xml"/><item><title>Math in Solidity</title><link>http://manifold.finance/hub/posts/math-in-solidity/</link><pubDate>Sun, 10 Oct 2021 16:30:31 -0700</pubDate><guid>http://manifold.finance/hub/posts/math-in-solidity/</guid><description>Solidity is an object-oriented, high-level language for implementing smart contracts. Smart contracts are programs which govern the behavior of accounts within the Ethereum state.</description></item><item><title>(EVM) Primer</title><link>http://manifold.finance/hub/posts/evm-lowlevel/</link><pubDate>Sat, 02 Oct 2021 00:00:00 +0000</pubDate><guid>http://manifold.finance/hub/posts/evm-lowlevel/</guid><description>Data Representation in Solidity # For writers of line debuggers and other debugging-related utilities.
#
Purpose of this document # The point of this document is to explain representation of data in Solidity for the purposes of locating and decoding it; more specifically, for writing a line debugger that does such. As such, other information about the type system or data layout that aren&amp;rsquo;t necessary for that may be skipped; and where location is not entirely predictable but may be determined by other systems of the debugger, we may rely on that.</description></item><item><title/><link>http://manifold.finance/hub/docs/openmev/functions_table/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://manifold.finance/hub/docs/openmev/functions_table/</guid><description>SushiSwap Router Function Calls # Router Function Calls # 0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F $function_calls %eligible swapExactTokensForTokens 100 swapExactTokensForETH 100 swapExactETHForTokens 100 swapETHForExactTokens 100 getAmountsOut null addLiquidityETH 50 addLiquidity 50 swapTokensForExactTokens 100 getAmountOut null removeLiquidityETHWithPermit 100 swapTokensForExactETH 100 removeLiquidityWithPermit 25 removeLiquidityETH 25 removeLiquidity 25 factory null swapExactTokensForETHSupportingFeeOnTransferTokens # swapExactTokensForTokensSupportingFeeOnTransferTokens # getAmountsIn null WETH null swapExactETHForTokensSupportingFeeOnTransferTokens # getAmountIn null removeLiquidityETHWithPermitSupportingFeeOnTransferTokens # removeLiquidityETHSupportingFeeOnTransferTokens #</description></item><item><title/><link>http://manifold.finance/hub/docs/openmev/rebate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://manifold.finance/hub/docs/openmev/rebate/</guid><description>Rebating Transaction Costs # Rebating a transaction is determined by:
Is the function that is called in the transaction eligible?
By tracking contract function calls we are better able to provide observability in the rebating process, we can also coordinate with teams wishing to provide more incentives for specific actions and behaviors If yes, what is the percentage that can be rebated?
This percentage value is a protocol value that can be adjusted What is the transaction cost for the eligible transaction?</description></item><item><title/><link>http://manifold.finance/hub/docs/openmev/sushi-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://manifold.finance/hub/docs/openmev/sushi-api/</guid><description>SushiSwap API # API Endpoints for SushiSwap
API # ExchangeV1 # /legacy/ API documentation
METHOD ENDPOINT GET /catchall+ GET /legacy/summary GET /legacy/tickers GET /legacy/assets GET /legacy/orderbook/pair GET /legacy/trades/pair Swap # /swap/ API documentation</description></item><item><title>OpenMEV Documentation</title><link>http://manifold.finance/hub/docs/openmev/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://manifold.finance/hub/docs/openmev/</guid><description>OpenMEV &amp;amp; Sushiswap # OpenMEV and Sushiswap work together to recapture lost MEV profits so that Sushi traders can trade for free (up to 95%) on the exchange.
These are not gasless transactions, these are paid rebate transactions! You get paid to trade more using OpenMEV.
Support and Help # !!! note We will never ask you to send tokens or coins anywhere!
Support Page Discord Chat Trading for Free on Sushi.</description></item></channel></rss>